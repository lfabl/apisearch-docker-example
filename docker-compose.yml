version: '3.5'

volumes:
    esdata_infra:
        driver: local
    redisdata_infra:
        driver: local
    mysqldata_infra:
        driver: local

networks:
    apisearch_infra:

services:

    #
    # ELK
    #
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
        container_name: apisearch.elasticsearch
        networks: [apisearch_infra]
        environment:
            - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
            - "discovery.type=single-node"
            - "action.auto_create_index=-apisearch*,+*"
        volumes:
            - esdata_infra:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"

    logstash:
        build:
            context: ./logstash
        container_name: apisearch.logstash
        networks: [apisearch_infra]
        volumes:
            - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
            - ./logstash/logstash_mysql.conf:/usr/share/logstash/pipeline/logstash_mysql.conf
            - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
            - ./logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml

    kibana:
        image: docker.elastic.co/kibana/kibana:7.4.2
        container_name: apisearch.kibana
        networks: [apisearch_infra]
        environment:
            ELASTICSEARCH_URL: http://apisearch.elasticsearch:9200
        ports:
            - "5601:5601"

    #
    # Persistence infrastructure
    #
    amqp:
        image: "rabbitmq:3-management"
        container_name: apisearch.amqp
        networks: [apisearch_infra]
        ports:
            - "15672:15672"

    redis:
        image: redis:4-alpine
        container_name: apisearch.redis
        networks: [apisearch_infra]
        volumes:
            - redisdata_infra:/data

    mysql:
        image: mysql:5
        container_name: apisearch.mysql
        networks: [apisearch_infra]
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: apisearch
        ports:
            - "3306:3306"
        volumes:
            - mysqldata_infra:/var/lib/mysql
            - ./mysql/tokens.sql:/docker-entrypoint-initdb.d/tokens.sql
            - ./mysql/metadata.sql:/docker-entrypoint-initdb.d/metadata.sql
            - ./mysql/usage_lines.sql:/docker-entrypoint-initdb.d/usage_lines.sql
            - ./mysql/index_configs.sql:/docker-entrypoint-initdb.d/index_configs.sql

    #
    # Apisearch containers
    #
    tiny_balancer:
        image: "driftphp/tiny-balancer"
        ports:
            - "${APISEARCH_SERVER_PORT}:8000"
        networks: [apisearch_infra]
        entrypoint: ["php", "balancer", "8000", "apisearch.server_1:8000", "apisearch.server_2:8000"]

    server_1:
        image: apisearchio/search-server:latest
        container_name: apisearch.server_1
        networks: [apisearch_infra]
        command: ["sh", /wait-and-run.sh, /create-infrastructure.sh, /server-entrypoint.sh]
        volumes:
            - ./wait/wait-and-run.sh:/wait-and-run.sh
            - ./marvel/feed.as:/marvel.as
        env_file:
            - ./.env

    server_2:
        image: apisearchio/search-server:latest
        container_name: apisearch.server_2
        networks: [apisearch_infra]
        command: ["sh", /wait-and-run.sh, /create-infrastructure.sh, /server-entrypoint.sh]
        volumes:
            - ./wait/wait-and-run.sh:/wait-and-run.sh
            - ./marvel/feed.as:/marvel.as
        env_file:
            - ./.env


